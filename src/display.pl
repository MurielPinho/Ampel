/*Declaration of a initial gamestate reconsult('p.pl'). */
initialState([[
[board,board,board,board,board,board,board,board,board,board,empty,board,board,board,board,board,board,board,board,board,board],
[board,board,board,board,board,board,board,board,board,empty,blank,empty,board,board,board,board,board,board,board,board,board],
[board,board,board,board,board,board,board,board,empty,blank,empty,blank,empty,board,board,board,board,board,board,board,board],
[board,board,board,board,board,board,board,empty,blank,empty,blank,empty,blank,empty,board,board,board,board,board,board,board],
[board,board,board,board,board,board,empty,blank,empty,blank,empty,blank,empty,blank,empty,board,board,board,board,board,board],
[board,board,board,board,board,empty,blank,empty,blank,empty,blank,empty,blank,empty,blank,empty,board,board,board,board,board],
[board,board,board,board,empty,blank,empty,blank,empty,blank,empty,blank,empty,blank,empty,blank,empty,board,board,board,board],
[board,board,board,empty,blank,empty,blank,empty,blank,empty,blank,empty,blank,empty,blank,empty,blank,empty,board,board,board],
[board,board,empty,blank,empty,blank,empty,blank,empty,blank,empty,blank,empty,blank,empty,blank,empty,blank,empty,board,board],
[board,empty,blank,empty,blank,empty,blank,empty,blank,empty,blank,empty,blank,empty,blank,empty,blank,empty,blank,empty,board],
[empty,blank,empty,blank,empty,blank,empty,blank,empty,blank,empty,blank,empty,blank,empty,blank,empty,blank,empty,blank,empty]],[0,0],[green,20],[red,20]]).


/*Returns the symbol to be displayed on board */
symbol(blank,S) :- atom_codes(S, [0x2573]).
symbol(board,S) :- atom_codes(S, [0x0020,0x0020]).
symbol(empty,S) :- atom_codes(S, [0x2502, 0x002E, 0x2502]).
symbol(yellow,S) :- atom_codes(S, [0x2502, 0x0059, 0x2502]).
symbol(green,S) :- atom_codes(S, [0x2502, 0x0047, 0x2502]).
symbol(red,S) :- atom_codes(S, [0x2502, 0x0052, 0x2502]).



/*Returns the number indicator on the left of the board*/
indice(1, I)  :- atom_codes(I, [0x0020, 0x0031,0x2503,0x0020]).
indice(2, I)  :- atom_codes(I, [0x0020, 0x0032,0x2503,0x0020]).
indice(3, I)  :- atom_codes(I, [0x0020, 0x0033,0x2503,0x0020]).
indice(4, I)  :- atom_codes(I, [0x0020, 0x0034,0x2503,0x0020]).
indice(5, I)  :- atom_codes(I, [0x0020, 0x0035,0x2503,0x0020]).
indice(6, I)  :- atom_codes(I, [0x0020, 0x0036,0x2503,0x0020]).
indice(7, I)  :- atom_codes(I, [0x0020, 0x0037,0x2503,0x0020]).
indice(8, I)  :- atom_codes(I, [0x0020, 0x0038,0x2503,0x0020]).
indice(9, I)  :- atom_codes(I, [0x0020, 0x0039,0x2503,0x0020]).
indice(10, I) :- atom_codes(I, [0x0031, 0x0030,0x2503,0x0020]).
indice(11, I) :- atom_codes(I, [0x0031, 0x0031,0x2503,0x0020]).

border('v',Border) :- atom_codes(Border, [0x2503]).
border('h',Border) :- atom_codes(Border, [0x0020,0x0020,0x2520,0x2500,0x2500,   0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2500,0x2528]).
border('t',Border) :- atom_codes(Border, [0x0020,0x0020,0x250F,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2513]).
border('b',Border) :- atom_codes(Border, [0x0020,0x0020,0x2517,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x2501,0x251B]).
border('m1',Border) :- atom_codes(Border, [0x0020,0x0020,0x2520,0x2500,0x252C,0x2500,0x252C,0x2500,0x252C,0x2500,0x252C,0x2500,0x252C,0x2500,0x252C,0x2500,0x252C,0x2500,0x252C,0x2500,0x252C,0x2500,0x252C,0x2500,0x252C,0x2500,0x252C,0x2500,0x252C,0x2500,0x252C,0x2500,0x252C,0x2500,0x252C,0x2500,0x252C,0x2500,0x252C,0x2500,0x252C,0x2500,0x252C,0x2500,0x252C,0x2500,0x252C,0x2500,0x2528]).
border('m2',Border) :- atom_codes(Border, [0x0020,0x0020,0x2520,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x253C,0x2500,0x253C,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2528]).
border('m3',Border) :- atom_codes(Border, [0x0020,0x0020,0x2520,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2534,0x2500,0x2528]).
border('i',Border) :- atom_codes(Border, [0x0020,0x0020,0x2503,0x0020,0x2502,0x0041,0x2502,0x0042,0x2502,0x0043,0x2502,0x0044,0x2502,0x0045,0x2502,0x0046,0x2502,0x0047,0x2502,0x0048,0x2502,0x0049,0x2502,0x004A,0x2502,0x004B,0x2502,0x004C,0x2502,0x004D,0x2502,0x004E,0x2502,0x004F,0x2502,0x0050,0x2502,0x0051,0x2502,0x0052,0x2502,0x0053,0x2502,0x0054,0x2502,0x0055,0x2502,0x0020,0x2503]).

border(1,Border) :- atom_codes(Border, [0x0020,0x0020,0x2503,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x250C,0x2500,0x253C,0x2500,0x253C,0x2500,0x2510,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x2503]).
border(2,Border) :- atom_codes(Border, [0x0020,0x0020,0x2503,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x250C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x2510,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x2503]).
border(3,Border) :- atom_codes(Border, [0x0020,0x0020,0x2503,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x250C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x2510,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x2503]).
border(4,Border) :- atom_codes(Border, [0x0020,0x0020,0x2503,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x250C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x2510,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x2503]).
border(5,Border) :- atom_codes(Border, [0x0020,0x0020,0x2503,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x250C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x2510,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x2503]).
border(6,Border) :- atom_codes(Border, [0x0020,0x0020,0x2503,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x250C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x2510,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x2503]).
border(7,Border) :- atom_codes(Border, [0x0020,0x0020,0x2503,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x250C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x2510,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x0020,0x2503]).
border(8,Border) :- atom_codes(Border, [0x0020,0x0020,0x2503,0x0020,0x0020,0x0020,0x0020,0x0020,0x250C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x2510,0x0020,0x0020,0x0020,0x0020,0x0020,0x2503]).
border(9,Border) :- atom_codes(Border, [0x0020,0x0020,0x2503,0x0020,0x0020,0x0020,0x250C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x2510,0x0020,0x0020,0x0020,0x2503]).
border(10,Border) :- atom_codes(Border, [0x0020,0x0020,0x2503,0x0020,0x250C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x2510,0x0020,0x2503]).
border(11,Border) :- atom_codes(Border, [0x0020,0x0020,0x2520,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x253C,0x2500,0x2528]).



/*Displays the game, including the score, board and pieces*/
displayGame([GameBoard,GameScore|GameInfo],Player) :-
    printHeader(GameScore,Player),
    printMatrix(GameBoard, 1),
    printFooter(GameInfo).
printMatrix([], 12).


/*Prints a matrix using recursion*/
printMatrix([Head|Tail], N) :-
    border('v',VerticalBorder),
    border(N,HorizontalBorder),
    indice(N, I),
    write(I),
    N1 is N + 1,
    printLine(Head),
    write(' '),write(VerticalBorder),nl,
    write(HorizontalBorder),
    nl,
    printMatrix(Tail, N1).
printLine([]).

/*Prints a line from a matrix*/
printLine([Head|Tail]) :-
    symbol(Head, S),
    write(S),
    printLine(Tail).

/*Prints the header from the board, with current player and score. */
printHeader(GameScore,Player):-
    border('v',VerticalBorder),
    border('t',TopBorder),
    border('m1',Middle1Border),
    border('m2',Middle2Border),
    border('i',Indice),
    nl,
    write(TopBorder),
    write('\n  '),
    write(VerticalBorder),
    write('\tTurn: Player '),
    PlayerNum is Player + 1,
    write(PlayerNum),
    write('\t'),
    write('     Score[P1,P2]:'),
    write(GameScore),
    write('\t'), write(VerticalBorder), nl ,
    write(Middle1Border),nl,
    write(Indice), nl,
    write(Middle2Border),nl.
    


/*Prints the Board footer that contains the player pieces*/
printFooter([Player1,Player2]) :-
    % Define unicode chars
    border('v',VerticalBorder),
    border('m3',MiddleBorder),
    border('b',BottomBorder),
    border('i',Indice),

    write(Indice), nl,

    
    write(MiddleBorder), nl,

    write('  '),
    write(VerticalBorder),
    write('  Player 1 Pieces          Player 2 Pieces\t'),
    write(VerticalBorder), nl,
    

    playerPieces(Player1, Player1Color, Player1Pieces),
    playerPieces(Player2, Player2Color, Player2Pieces),
    symbol(Player1Color, S1),
    symbol(Player2Color, S2),
    write('  '),
    write(VerticalBorder),
    write('  '),
    write(S1),
    write(':   '),
    write(Player1Pieces),
    write('\t     \t      '),
    write(S2),
    write(':   '),
    write(Player2Pieces),
    write('\t\t'),
    write(VerticalBorder),
    write('\n'),
    write(BottomBorder),
    write('\n').

